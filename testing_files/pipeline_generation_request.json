{
  "codebase_files": [
    "package.json",
    "src/App.tsx",
    "src/components/Header.tsx", 
    "src/components/Dashboard.tsx",
    "src/components/UserProfile.tsx",
    "src/hooks/useAuth.ts",
    "src/hooks/useApi.ts",
    "src/utils/api.ts",
    "src/utils/validation.ts",
    "src/styles/globals.css",
    "src/types/user.ts",
    "src/types/api.ts",
    "public/index.html",
    "public/favicon.ico",
    "README.md",
    "Dockerfile",
    "docker-compose.yml",
    "nginx.conf",
    ".github/workflows/ci.yml",
    "jest.config.js",
    "__tests__/App.test.tsx",
    "__tests__/components/Header.test.tsx",
    "__tests__/utils/api.test.ts",
    "__tests__/utils/validation.test.ts",
    ".env.example",
    "tsconfig.json",
    "tailwind.config.js",
    "next.config.js",
    "prisma/schema.prisma",
    "prisma/migrations/001_initial.sql",
    "k8s/deployment.yaml",
    "k8s/service.yaml",
    "k8s/ingress.yaml",
    "terraform/main.tf",
    "terraform/variables.tf"
  ],
  "requirements": {
    "testing": "Comprehensive unit and integration tests with 90%+ coverage, E2E tests for critical paths",
    "security": "SAST scanning, dependency vulnerability checks, container scanning, secrets management",
    "performance": "Optimized for fast feedback, parallel execution, build time under 10 minutes",
    "compliance": "SOC 2 Type II compliance, GDPR compliance for user data",
    "budget": "Cost-conscious, optimize for efficiency, use spot instances where possible",
    "deployment_frequency": "Multiple deployments per day, blue-green deployments",
    "environments": "Development, Staging, Production, with proper promotion gates"
  },
  "deployment_target": "AWS",
  "team_size": "large",
  "additional_context": {
    "has_database": true,
    "database_type": "PostgreSQL",
    "uses_microservices": false,
    "containerized": true,
    "monitoring_required": true,
    "high_availability": true,
    "multi_region": false,
    "expected_traffic": "high",
    "data_sensitivity": "high"
  }
}
